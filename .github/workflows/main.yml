# The name of the work flow. Badges will use this name
name: 'IAC Assist Action'

on:
  
  workflow_dispatch:
    inputs:
      reason:
        description: 'Do you want to process all files?'
        required: false
        default: 'No - Only Last Commit Files'
        type: choice
        options:
        - Yes - All Files
        - No - Only Last Commit Files
        
  push:
    branches: [ master ]
  
      

jobs:
  analysis:
    permissions: write-all
    runs-on: ubuntu-latest
   

    steps:
    - name: get message
      run: echo "Token ${{ secrets.PAT_TOKEN }}"
      
    - uses: actions/checkout@v2
      with:
        repository: threatModeler/GitHubCLI
        token: ${{ secrets.PAT_TOKEN }}
      
              
    - name: ThreatModeler Process
      id: iac-assist
      uses: threatModeler/GitHubCLI@master 
      env:
        API_TOKEN_GITHUB: ${{ secrets.PAT_TOKEN }}
      with:
        token: ${{ secrets.PAT_TOKEN }}
        owner: ${{ github.repository_owner }}
        name: ${{ github.repository }}
        branch: ${{ github.ref }}
        dir: ${{ './' }}
        batchsize: 2
        apikey: ${{ secrets.TM_TFPOC_API_KEY }}
        bucketkey: ${{ secrets.S3_BUCKET_ACCESS_KEY }}
        bucketregion: ${{ secrets.S3_BUCKET_REGION_CODE }}
        bucketsecretkey: ${{ secrets.S3_BUCKET_SECRETACCESS_KEY }}
        githubtoken: ${{ secrets.REPOSITORY_ACCESS_TOKEN }}        
        inputvalue: ${{ github.event.inputs.reason }}      
        lastsha: ${{ github.sha }}
        repositorybaseurl: 'https://github.com/${{ github.repository }}/blob/${GITHUB_REF##*/}'
        
        
    - name: Print Identified File Names
      run: echo "Log file directory ${{ steps.iac-assist.outputs.logfilepath }}"
        echo "Last commit sha  ${{ github.sha }}"
        echo "File status value ${{ steps.iac-assist.outputs.filesStatus }}"
        echo "Github call ${{ steps.iac-assist.outputs.GithubCall }}"
        echo "CFN Files ${{ steps.iac-assist.outputs.cfnfiles }}"
        echo "Azure Files ${{ steps.iac-assist.outputs.armfiles }}"
        echo "Terraform Files ${{ steps.iac-assist.outputs.tffiles }}"
        echo "input value Files ${{ steps.iac-assist.outputs.inputValueCall }}"
        echo "Files process ${{ steps.iac-assist.outputs.filesProcess }}"
        
        
    - name: view log files
      run: ls -al "/home/runner/work/GitHubCLI/GitHubCLI/SarifFiles"
      
    - if: ${{ steps.iac-assist.outputs.filesProcess == 'true' }}
      name: Store SARIF results as Build Artifact
      uses: actions/upload-artifact@v1
      with:
          name: IAC_SARIF_Results
          path: /home/runner/work/GitHubCLI/GitHubCLI/SarifFiles/
     
    - if: ${{ steps.iac-assist.outputs.filesProcess == 'true' }} 
      name: Upload SARIF results to Github
      uses: github/codeql-action/upload-sarif@v2      
      with:
          sarif_file: /home/runner/work/GitHubCLI/GitHubCLI/SarifFiles/     
